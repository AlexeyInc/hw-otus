{
  "swagger": "2.0",
  "info": {
    "title": "EventService.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/EventService": {
      "post": {
        "operationId": "EventService_CreateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventCreateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventCreateEventRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "put": {
        "operationId": "EventService_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventUpdateEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventUpdateEventRequest"
            }
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/v1/EventService/Day/{day}": {
      "get": {
        "operationId": "EventService_GetDayEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "day",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/v1/EventService/Month/{monthStart}": {
      "get": {
        "operationId": "EventService_GetMonthEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "monthStart",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/v1/EventService/Week/{weekStart}": {
      "get": {
        "operationId": "EventService_GetWeekEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "weekStart",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    },
    "/v1/EventService/{id}": {
      "get": {
        "operationId": "EventService_GetEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventGetEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "EventService"
        ]
      },
      "delete": {
        "operationId": "EventService_DeleteEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "EventService"
        ]
      }
    }
  },
  "definitions": {
    "eventCreateEventRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "startEvent": {
          "type": "string",
          "format": "date-time"
        },
        "endEvent": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "idUser": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "eventCreateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventEmptyResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "eventEvent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "startEvent": {
          "type": "string",
          "format": "date-time"
        },
        "endEvent": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "idUser": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "eventGetEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "eventGetEventsResponse": {
      "type": "object",
      "properties": {
        "event": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/eventEvent"
          }
        }
      }
    },
    "eventUpdateEventRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "startEvent": {
          "type": "string",
          "format": "date-time"
        },
        "endEvent": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "idUser": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "eventUpdateEventResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/eventEvent"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
